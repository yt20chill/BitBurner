export var Color;
(function (Color) {
    Color["RED"] = "red";
    Color["CYAN"] = "cyan";
    Color["GREEN"] = "green";
    Color["YELLOW"] = "yellow";
})(Color || (Color = {}));
export const RESET = '\u001b[0m';
export const CYAN = '\u001b[36m';
export const YELLOW = '\u001b[33m';
export const GREEN = '\u001b[32m';
export const RED = '\u001b[31m';
export const colorize = (displayString, color) => {
    const SUFFIX = displayString + RESET;
    switch (color) {
        case 'red':
            return RED + SUFFIX;
        case 'cyan':
            return CYAN + SUFFIX;
        case 'green':
            return GREEN + SUFFIX;
        case 'yellow':
            return YELLOW + SUFFIX;
        default:
            return displayString;
    }
};
export const colorizeMeetRequirement = (displayString, isSatisfied) => {
    const color = isSatisfied ? Color.GREEN : Color.RED;
    return colorize(displayString, color);
};
const DISABLED_LOGS = [
    'sleep',
    'getHackingLevel',
    'getServerMaxMoney',
    'getServerMinSecurityLevel',
    'getServerSecurityLevel',
    'getServerMoneyAvailable',
    'getServerMaxRam',
    'getServerUsedRam',
];
export const silenceLogs = (ns, logs = DISABLED_LOGS) => {
    logs.forEach((log) => ns.disableLog(log));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbnRVdGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL3V0aWxzL3ByaW50VXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFOLElBQVksS0FLWDtBQUxELFdBQVksS0FBSztJQUNmLG9CQUFXLENBQUE7SUFDWCxzQkFBYSxDQUFBO0lBQ2Isd0JBQWUsQ0FBQTtJQUNmLDBCQUFpQixDQUFBO0FBQ25CLENBQUMsRUFMVyxLQUFLLEtBQUwsS0FBSyxRQUtoQjtBQUVELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxXQUFXLENBQUM7QUFFakMsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQztBQUNqQyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsWUFBWSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxZQUFZLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLFlBQVksQ0FBQztBQUVoQyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxhQUFxQixFQUFFLEtBQVksRUFBRSxFQUFFO0lBQzlELE1BQU0sTUFBTSxHQUFHLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFDckMsUUFBUSxLQUFLLEVBQUU7UUFDYixLQUFLLEtBQUs7WUFDUixPQUFPLEdBQUcsR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSyxNQUFNO1lBQ1QsT0FBTyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQ3ZCLEtBQUssT0FBTztZQUNWLE9BQU8sS0FBSyxHQUFHLE1BQU0sQ0FBQztRQUN4QixLQUFLLFFBQVE7WUFDWCxPQUFPLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDekI7WUFDRSxPQUFPLGFBQWEsQ0FBQztLQUN4QjtBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLENBQ3JDLGFBQXFCLEVBQ3JCLFdBQW9CLEVBQ3BCLEVBQUU7SUFDRixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDcEQsT0FBTyxRQUFRLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQztBQUVGLE1BQU0sYUFBYSxHQUFHO0lBQ3BCLE9BQU87SUFDUCxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLDJCQUEyQjtJQUMzQix3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixrQkFBa0I7Q0FDbkIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQU0sRUFBRSxPQUFpQixhQUFhLEVBQUUsRUFBRTtJQUNwRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tICdAbnMnO1xuXG5leHBvcnQgZW51bSBDb2xvciB7XG4gIFJFRCA9ICdyZWQnLFxuICBDWUFOID0gJ2N5YW4nLFxuICBHUkVFTiA9ICdncmVlbicsXG4gIFlFTExPVyA9ICd5ZWxsb3cnLFxufVxuXG5leHBvcnQgY29uc3QgUkVTRVQgPSAnXFx1MDAxYlswbSc7XG5cbmV4cG9ydCBjb25zdCBDWUFOID0gJ1xcdTAwMWJbMzZtJztcbmV4cG9ydCBjb25zdCBZRUxMT1cgPSAnXFx1MDAxYlszM20nO1xuZXhwb3J0IGNvbnN0IEdSRUVOID0gJ1xcdTAwMWJbMzJtJztcbmV4cG9ydCBjb25zdCBSRUQgPSAnXFx1MDAxYlszMW0nO1xuXG5leHBvcnQgY29uc3QgY29sb3JpemUgPSAoZGlzcGxheVN0cmluZzogc3RyaW5nLCBjb2xvcjogQ29sb3IpID0+IHtcbiAgY29uc3QgU1VGRklYID0gZGlzcGxheVN0cmluZyArIFJFU0VUO1xuICBzd2l0Y2ggKGNvbG9yKSB7XG4gICAgY2FzZSAncmVkJzpcbiAgICAgIHJldHVybiBSRUQgKyBTVUZGSVg7XG4gICAgY2FzZSAnY3lhbic6XG4gICAgICByZXR1cm4gQ1lBTiArIFNVRkZJWDtcbiAgICBjYXNlICdncmVlbic6XG4gICAgICByZXR1cm4gR1JFRU4gKyBTVUZGSVg7XG4gICAgY2FzZSAneWVsbG93JzpcbiAgICAgIHJldHVybiBZRUxMT1cgKyBTVUZGSVg7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBkaXNwbGF5U3RyaW5nO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JpemVNZWV0UmVxdWlyZW1lbnQgPSAoXG4gIGRpc3BsYXlTdHJpbmc6IHN0cmluZyxcbiAgaXNTYXRpc2ZpZWQ6IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBjb2xvciA9IGlzU2F0aXNmaWVkID8gQ29sb3IuR1JFRU4gOiBDb2xvci5SRUQ7XG4gIHJldHVybiBjb2xvcml6ZShkaXNwbGF5U3RyaW5nLCBjb2xvcik7XG59O1xuXG5jb25zdCBESVNBQkxFRF9MT0dTID0gW1xuICAnc2xlZXAnLFxuICAnZ2V0SGFja2luZ0xldmVsJyxcbiAgJ2dldFNlcnZlck1heE1vbmV5JyxcbiAgJ2dldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwnLFxuICAnZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCcsXG4gICdnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZScsXG4gICdnZXRTZXJ2ZXJNYXhSYW0nLFxuICAnZ2V0U2VydmVyVXNlZFJhbScsXG5dO1xuXG5leHBvcnQgY29uc3Qgc2lsZW5jZUxvZ3MgPSAobnM6IE5TLCBsb2dzOiBzdHJpbmdbXSA9IERJU0FCTEVEX0xPR1MpID0+IHtcbiAgbG9ncy5mb3JFYWNoKChsb2cpID0+IG5zLmRpc2FibGVMb2cobG9nKSk7XG59O1xuIl19
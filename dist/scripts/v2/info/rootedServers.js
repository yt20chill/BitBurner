import { FilePaths } from 'data/FilePaths';
import { FileSystem } from 'scripts/utils/fsUtils';
import { getAllServers } from 'scripts/v2/info/allServers';
/**
 * Retrieves and records the names of all servers with root access within a game environment.
 * The script first collects all servers accessible from a starting point and checks each for root access.
 * Servers with root access are sorted by their maximum RAM capacity in descending order,
 * and the list is saved to a specified file.
 * This script leverages a modular approach, using a custom `FileSystem` class for file operations.
 */
export async function main(ns) {
    // Instantiate the FileSystem class for file operations, targeting a specific file.
    const ROOTED_SERVERS = new FileSystem(ns, FilePaths.ROOTED_SERVERS);
    const results = getAllServers(ns)
        .filter((server) => server.info.hasAdminRights)
        .sort((a, b) => b.info.maxRam - a.info.maxRam);
    await ROOTED_SERVERS.write(results.map((server) => server.toJSON()));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdGVkU2VydmVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zY3JpcHRzL3YyL2luZm8vcm9vdGVkU2VydmVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUzRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFNO0lBQy9CLG1GQUFtRjtJQUNuRixNQUFNLGNBQWMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBRXBFLE1BQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxFQUFFLENBQUM7U0FDOUIsTUFBTSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztTQUM5QyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWpELE1BQU0sY0FBYyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3ZFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gJ0Bucyc7XG5pbXBvcnQgeyBGaWxlUGF0aHMgfSBmcm9tICdkYXRhL0ZpbGVQYXRocyc7XG5pbXBvcnQgeyBGaWxlU3lzdGVtIH0gZnJvbSAnc2NyaXB0cy91dGlscy9mc1V0aWxzJztcbmltcG9ydCB7IGdldEFsbFNlcnZlcnMgfSBmcm9tICdzY3JpcHRzL3YyL2luZm8vYWxsU2VydmVycyc7XG5cbi8qKlxuICogUmV0cmlldmVzIGFuZCByZWNvcmRzIHRoZSBuYW1lcyBvZiBhbGwgc2VydmVycyB3aXRoIHJvb3QgYWNjZXNzIHdpdGhpbiBhIGdhbWUgZW52aXJvbm1lbnQuXG4gKiBUaGUgc2NyaXB0IGZpcnN0IGNvbGxlY3RzIGFsbCBzZXJ2ZXJzIGFjY2Vzc2libGUgZnJvbSBhIHN0YXJ0aW5nIHBvaW50IGFuZCBjaGVja3MgZWFjaCBmb3Igcm9vdCBhY2Nlc3MuXG4gKiBTZXJ2ZXJzIHdpdGggcm9vdCBhY2Nlc3MgYXJlIHNvcnRlZCBieSB0aGVpciBtYXhpbXVtIFJBTSBjYXBhY2l0eSBpbiBkZXNjZW5kaW5nIG9yZGVyLFxuICogYW5kIHRoZSBsaXN0IGlzIHNhdmVkIHRvIGEgc3BlY2lmaWVkIGZpbGUuXG4gKiBUaGlzIHNjcmlwdCBsZXZlcmFnZXMgYSBtb2R1bGFyIGFwcHJvYWNoLCB1c2luZyBhIGN1c3RvbSBgRmlsZVN5c3RlbWAgY2xhc3MgZm9yIGZpbGUgb3BlcmF0aW9ucy5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XG4gIC8vIEluc3RhbnRpYXRlIHRoZSBGaWxlU3lzdGVtIGNsYXNzIGZvciBmaWxlIG9wZXJhdGlvbnMsIHRhcmdldGluZyBhIHNwZWNpZmljIGZpbGUuXG4gIGNvbnN0IFJPT1RFRF9TRVJWRVJTID0gbmV3IEZpbGVTeXN0ZW0obnMsIEZpbGVQYXRocy5ST09URURfU0VSVkVSUyk7XG5cbiAgY29uc3QgcmVzdWx0cyA9IGdldEFsbFNlcnZlcnMobnMpXG4gICAgLmZpbHRlcigoc2VydmVyKSA9PiBzZXJ2ZXIuaW5mby5oYXNBZG1pblJpZ2h0cylcbiAgICAuc29ydCgoYSwgYikgPT4gYi5pbmZvLm1heFJhbSAtIGEuaW5mby5tYXhSYW0pO1xuXG4gIGF3YWl0IFJPT1RFRF9TRVJWRVJTLndyaXRlKHJlc3VsdHMubWFwKChzZXJ2ZXIpID0+IHNlcnZlci50b0pTT04oKSkpO1xufVxuIl19